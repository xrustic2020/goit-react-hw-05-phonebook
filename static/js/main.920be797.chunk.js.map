{"version":3,"sources":["components/Contacts/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Contacts/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Section/Section.module.css","redux/items/items-actions.js","redux/filter/filter-actions.js","redux/initialState.js","redux/items/items-reducer.js","redux/filter/filter-reducer.js","redux/store.js","components/Contacts/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactList/ContactList.jsx","components/Container/Container.jsx","components/Section/Section.jsx","App.jsx","index.js"],"names":["module","exports","contactsActions","addedContact","createAction","deleteContactItem","filterActions","setFilter","resetFilter","contactsInLocalstorage","localStorage","getItem","initialState","contacts","items","JSON","parse","id","name","number","filter","itemsReducer","createReducer","actions","state","payload","el","filterReducer","_","contactsReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","connect","dispatch","onAddedContact","newContact","itemsAction","value","filterAction","useState","setName","setNumber","onSubmit","evt","preventDefault","uuid","slice","getState","find","toast","warn","success","error","handleSubmit","className","s","form","overlay","type","input","onChange","target","Button","variant","color","size","startIcon","onReset","label","IconButton","aria-label","onClick","onDeleteContact","contact","listItem","fullName","filteredContacts","toLowerCase","includes","container","map","Container","children","Section","title","useEffect","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.920be797.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Hrai7\",\"input\":\"ContactForm_input__3SsTs\",\"overlay\":\"ContactForm_overlay__2eIGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__caN1B\",\"fullName\":\"ContactItem_fullName__2e0dc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__gOn1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addedContact = createAction('contacts/add');\nconst deleteContactItem = createAction('contacts/delete');\n\nconst contactsActions = {\n  addedContact,\n  deleteContactItem,\n};\n\nexport default contactsActions;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst setFilter = createAction('filter/set');\nconst resetFilter = createAction('filter/reset');\n\nconst filterActions = {\n  setFilter,\n  resetFilter,\n};\n\nexport default filterActions;\n","const defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nlet items = [];\nconst contactsInLocalstorage = localStorage.getItem('contacts');\n\nif (contactsInLocalstorage) {\n  items = JSON.parse(contactsInLocalstorage);\n} else {\n  items = defaultContacts;\n}\n\nconst initialState = {\n  contacts: {\n    items,\n    filter: '',\n  },\n};\n\nexport default initialState;\n","import { createReducer } from '@reduxjs/toolkit';\nimport initialState from 'redux/initialState';\nimport actions from './items-actions.js';\n\nconst itemsReducer = createReducer(initialState.contacts.items, {\n  [actions.addedContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactItem]: (state, { payload }) => [\n    ...state.filter(el => el.id !== payload),\n  ],\n});\n\nexport default itemsReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport initialState from 'redux/initialState';\nimport actions from './filter-actions';\n\nconst filterReducer = createReducer(initialState.contacts.filter, {\n  [actions.setFilter]: (_, { payload }) => payload,\n  [actions.resetFilter]: (_, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport itemsReducer from './items/items-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\nimport Button from '@material-ui/core/Button';\n\nimport itemsAction from 'redux/items/items-actions';\nimport filterAction from 'redux/filter/filter-actions';\nimport store from 'redux/store';\n\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onAddedContact, setFilter }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const newContact = {\n      id: uuid().slice(30),\n      name,\n      number,\n    };\n    setName('');\n    setNumber('');\n\n    const prevState = store.getState().contacts.items;\n    const contactFound = prevState.find(el => el.name === name);\n    if (contactFound) {\n      toast.warn(`\"${name}\" is already in contacts`);\n      setFilter(name);\n      return;\n    } else if (!name) {\n      toast.error('the \"Name\" field must contain the name of the contact');\n      return;\n    } else if (!number) {\n      toast.error('the \"Number\" field must contain the contact number');\n      return;\n    }\n\n    toast.success(\n      `Contact \"${name}\" with number \"${number}\" has been successfully created`,\n    );\n    onAddedContact(newContact);\n  };\n\n  return (\n    <form onSubmit={evt => handleSubmit(evt)} className={s.form}>\n      <div className={s.overlay}>\n        <label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            value={name}\n            onChange={evt => setName(evt.target.value)}\n          />\n        </label>\n\n        <label>\n          <span>Number</span>\n          <input\n            type=\"number\"\n            name=\"number\"\n            className={s.input}\n            value={number}\n            onChange={evt => setNumber(evt.target.value)}\n          />\n        </label>\n      </div>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        startIcon={<AddOutlinedIcon />}\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onAddedContact: PropTypes.func.isRequired,\n  setFilter: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddedContact: newContact =>\n      dispatch(itemsAction.addedContact(newContact)),\n    setFilter: value => dispatch(filterAction.setFilter(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\n\nimport filterAction from 'redux/filter/filter-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, setFilter, onReset }) => {\n  return (\n    <div className={s.filter}>\n      <label>\n        <span className={s.label}>Filter</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className={s.input}\n          value={filter}\n          onChange={evt => setFilter(evt.target.value)}\n        />\n      </label>\n\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          toast.success('Filter cleaned successfully');\n          onReset();\n        }}\n      >\n        {filter && <RotateLeftOutlinedIcon />}\n      </IconButton>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilter: value => dispatch(filterAction.setFilter(value)),\n    onReset: () => dispatch(filterAction.resetFilter('')),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport itemsAction from 'redux/items/items-actions';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  const { id, name, number } = contact;\n  return (\n    <li className={s.listItem}>\n      <div className={s.fullName}>\n        <span>{name}: </span>\n        <span>{number}</span>\n      </div>\n      <IconButton\n        aria-label=\"Delete\"\n        onClick={() => {\n          toast.success(`Contact \"${name}\" successfully deleted`);\n          onDeleteContact(id);\n        }}\n      >\n        <DeleteIcon />\n      </IconButton>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDeleteContact: contact =>\n      dispatch(itemsAction.deleteContactItem(contact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContactItem from 'components/Contacts/ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filter }) => {\n  const filteredContacts = contacts.filter(el =>\n    el.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <ul className={s.container}>\n      {filteredContacts.map(el => (\n        <ContactItem contact={el} key={el.id} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport ContactForm from 'components/Contacts/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/Contacts/ContactList';\nimport Container from 'components/Container';\nimport Section from 'components/Section';\n\nconst App = ({ contacts }) => {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <div>\n          <Filter />\n          <ContactList />\n        </div>\n      </Section>\n      <ToastContainer />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}